
# Chat
chat.pickuplimits:no_equip=You cannot equip %s
chat.pickuplimits:no_pickup=You cannot carry any more %s

# Tooltips
tooltip.pickuplimits:limits=Hold SHIFT to display limits

# Wiki
groovyscript.wiki.pickuplimits.equipment_limit.title=Equipment Limits
groovyscript.wiki.pickuplimits.equipment_limit.simpleEquipmentLimit=Simple Equipment Limit
groovyscript.wiki.pickuplimits.equipment_limit.simpleEnchantmentLimit=Simple Enchantment Limit
groovyscript.wiki.pickuplimits.equipment_limit.equippedEnchantedItemLimit=Simple Enchanted Item Limit

groovyscript.wiki.pickuplimits.equipment_limit.addEnchantments.value=<p>You can add Enchantment values to Equipment Limit groups. Using the `setMatchAnyEnchant()` will allow the limit group to match any enchantment.</p><p>You can call the `addEnchantments()` method as many times as needed in any order.</p>
groovyscript.wiki.pickuplimits.equipment_limit.addStagedEnchantmentRemovals.value=<p>You can define Enchantment values you wish to remove from this group based on player stage. When the player reaches the specified stage, any defined item will be removed from the limit group.</p>You can call this method as many times as needed in any order
groovyscript.wiki.pickuplimits.equipment_limit.setCheckMainhand.value=<p>The ```setCheckMainhand()``` method will also include whatever item is currently being held by the player. If the equipment limit is exceeded, the main hand item will be **DROPPED** into the world.</p>This method can only be called once per builder
groovyscript.wiki.pickuplimits.equipment_limit.setCheckOffhand.value=<p>The ```setCheckOffhand()``` method includes the player's offhand slot when calculating the equipment limit. If the equipment limit is exceeded, the item will be inserted into the player's inventory or dropped into the world if the inventory is full.</p>This method can only be called once per builder
groovyscript.wiki.pickuplimits.equipment_limit.setIgnoreEnchantmentLevel.value=<p>The ```setIgnoreEnchantmentLevel()``` method will set this specific group to ignore enchantment levels and instead tally the number of matching enchants. An Iron Chestplate with Protection III and Thorns II will have an enchantment limit value of 1 + 1 = 2, 1 limit value for protection and 1 limit value for thorns.</p>This method can only be called once per builder
groovyscript.wiki.pickuplimits.equipment_limit.setIgnoreItemEnchantmentCount.value=<p>The ```setIgnoreItemEnchantmentCount()``` method allows you to bypass the checks for both enchantment level and total enchants on the item. An Iron Chestplate with Protection III and Thorns II will have an enchantment limit value of 1.</p><p>Due to the nature of the ```setIgnoreItemEnchantmentCount()``` method, it has priority over, and is mutually exclusive to ```setIgnoreEnchantmentLevel()```.</p>This method can only be called once per builder
groovyscript.wiki.pickuplimits.equipment_limit.setMatchAnyEnchant.value=<p>Using the `setMatchAnyEnchant()` will allow the limit group to match any enchantment.</p><p>Calling the `setMatchAnyEnchant()` will override all other group enchantment behavior. This includes Game Stage enchantment removals added with `addStagedEnchantRemovals()`.</p>This method can only be called once per builder

groovyscript.wiki.pickuplimits.limit_builder.addArmorLimitAdjustment.value=<p>You can define limit adjustments based on the player's currently equipped armors. A positive adjustment value will increase the group item limit and negative adjustment value will decrease the group item limit.You can call this method as many times as needed in any order
groovyscript.wiki.pickuplimits.limit_builder.addBaubleLimitAdjustment.value=<p>You can define limit adjustments based on the player's currently equipped baubles. A positive adjustment value will increase the group item limit and negative adjustment value will decrease the group item limit.</p>You can call this method as many times as needed in any order
groovyscript.wiki.pickuplimits.limit_builder.addEnchantmentLimitAdjustment.value=<p>You can define limit adjustments based on enchantments on the player's currently equipped items. This search includes both equipment and bauble slots. A positive adjustment value will increase the group item limit and negative adjustment value will decrease the group item limit.</p>You can call this method as many times as needed in any order
groovyscript.wiki.pickuplimits.limit_builder.addEncumberedEffect.value=<p>Encumbered Effects are potion effects that applied when a player exceeds a limit group. These are performed in lue of dropping or unequipping the items.</p>You can call this method as many times as needed in any order
groovyscript.wiki.pickuplimits.limit_builder.addPotionLimitAdjustment.value=<p>You can define limit adjustments based on the player's currently equipped potion effects. A positive adjustment value will increase the group item limit and negative adjustment value will decrease the group item limit.</p>You can call this method as many times as needed in any order
groovyscript.wiki.pickuplimits.limit_builder.addStacks.value=<p>You can add ItemStacks to any Limit Group. Additional stacks can be included by separating them with a comma or using repeating `addStacks()` method calls.</p>You can call this method as many times as needed in any order
groovyscript.wiki.pickuplimits.limit_builder.addStagedLimitOverride.value=<p>You can define group limit overrides depending on player game stage. This value will override the default limit if the player has the specified game stage.</p>You can use this method as many times as needed, but stages must registered in order of priority, lowest priority being registered first and highest priority registered last. The last registered stage will override any that precede it.</p><p>Using this method to define a limit override value of -1 will disable this group
groovyscript.wiki.pickuplimits.limit_builder.addStagedStackRemovals.value=<p>You can define any ItemStack value you wish to remove from this group based on player stage. When the player reaches the specified stage, any defined item will be removed from the limit group.</p>You can call this method as many times as needed in any order
groovyscript.wiki.pickuplimits.limit_builder.setAllowOverLimit.value=<p>When using stack limit value functions, sometimes it is necessary to allow limit groups to exceed their max limit values. The `setAllowOverLimit()` method disables default limit group behavior such as dropping or unequipping items.</p>This method can only be called once per builder
groovyscript.wiki.pickuplimits.limit_builder.setLimitMessage.value=<p>You can define the message sent to the player whenever an item exceeds the limit group max limit. This method supports localization language keys or plain text. Including a `%s` in the text or translated string will also display the ItemStack display name. This method can only be called once. Subsequent calls will overwrite previous settings.</p>This method can only be called once per builder
groovyscript.wiki.pickuplimits.limit_builder.setLimitTooltip.value=<p>You can define item tooltips that will display on any item that belongs or is matched with this limit group. If this method is not called, no tooltip will be displayed.</p>This method can only be called once per builder
groovyscript.wiki.pickuplimits.limit_builder.setStackLimitFunction.value=<p>Limit value functions allow users to have complete control over the calculated limit value of any item that matches the limit group.<p>The `ILimitFunction` is a function provider that grants access to the player (EntityPlayer), the queried ItemStack, and the limit group (ILimitGroup).</p><p>This method overwrites all other limit calculation behavior. Should you want to use default group behavior, be sure to return the ```getDefaultLimitValue``` pulled from the group parameter.</p>This method can only be called once per builder

groovyscript.wiki.pickuplimits.pickup_limit.title=Pickup Limits
groovyscript.wiki.pickuplimits.pickup_limit.description=Pickup Limits are limit groups that restrict the number of items a player is allowed to carry. PickupLimits scan the player's inventory and calculate a total based on number of items that match each limit group. Should the player exceed the maximum allowable limit, excess items will be dropped into the world.
groovyscript.wiki.pickuplimits.pickup_limit.simplePickupLimit=Simple Pickup Limit
groovyscript.wiki.pickuplimits.pickup_limit.simpleItemPickupLimit.description=Simple ItemStack Pickup Limit Group
groovyscript.wiki.pickuplimits.pickup_limit.simpleItemPickupLimit.message.description=Simple ItemStack Pickup Limit Group with Limit Message
groovyscript.wiki.pickuplimits.pickup_limit.simpleOrePickupLimit.description=Simple Ore Dictionary Limit Group
groovyscript.wiki.pickuplimits.pickup_limit.simpleOrePickupLimit.message.description=Simple Ore Dictionary Limit Group with Limit Message
groovyscript.wiki.pickuplimits.pickup_limit.addOreDict.value=<p>In addition to ItemStacks, Pickup Limits support adding items via [OreDictIngredient](https://cleanroommc.com/groovy-script/minecraft/vanilla_object_mappers#ore). Any ItemStack matching the passed ore dictionary will be registered with the limit group.</p>You can call this method as many times as needed in any order
groovyscript.wiki.pickuplimits.pickup_limit.addStagedOreRemovals.value=<p>You can define any [OreDictIngredient](https://cleanroommc.com/groovy-script/minecraft/vanilla_object_mappers#ore) value you wish to remove from this group based on player stage. When the player reaches the specified stage, any defined item will be removed from the limit group.</p>You can call this method as many times as needed in any order



